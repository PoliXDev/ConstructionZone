@use '/sass/abstracts/variables' as var;

@mixin breakpoint($bp) {
  @if $bp == tablet {
    @media (min-width: var.$bp-tablet) {
      @content;
    }
  }

  @if $bp == tablethorizontal {
    @media (min-width: var.$bp-tablet-horizontal) {
      @content;
    }
  }

  @if $bp == desktop {
    @media (min-width: var.$bp-desktop) {
      @content;
    }
  }

  @if $bp == desktopxl {
    @media (min-width: var.$bp-desktop-xl) {
      @content;
    }
  }
}

// Mixins para ReparatuCarro.com

// Import variables
@use 'variables' as *;

// Media queries responsive
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: $breakpoint-sm - 1) { @content; }
  } @else if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  } @else if $breakpoint == xxl {
    @media (min-width: $breakpoint-xxl) { @content; }
  }
}

// Flexbox utilities
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Center content absolutely
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Truncate text with ellipsis
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Simple transition
@mixin transition($property: all, $duration: 0.3s, $timing: ease-in-out) {
  transition: $property $duration $timing;
}

// Box shadow
@mixin box-shadow($shadow: $box-shadow) {
  box-shadow: $shadow;
}

// Button styles
@mixin button-style($bg-color: $primary-color, $text-color: $light, $hover-darken: 10%) {
  display: inline-block;
  background-color: $bg-color;
  color: $text-color;
  padding: $spacing-sm $spacing-md;
  border-radius: $border-radius;
  border: none;
  cursor: pointer;
  font-weight: 500;
  text-align: center;
  text-decoration: none;
  @include transition;
  
  &:hover, &:focus {
    background-color: darken($bg-color, $hover-darken);
  }
  
  &:active {
    transform: translateY(1px);
  }
}

// Grid container
@mixin container($max-width: $container-max-width, $padding: $container-padding) {
  width: 100%;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: $padding;
  padding-right: $padding;
}

// Clearfix
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// Visually hidden (for accessibility)
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
